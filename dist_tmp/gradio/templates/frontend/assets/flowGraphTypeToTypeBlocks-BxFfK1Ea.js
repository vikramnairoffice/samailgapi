import{F as a}from"./flowGraphUnaryOperationBlock-DRFssI9x.js";import{b as n,j as s,F as e,c as p}from"./declarationMapper-D-SRtvru.js";import{R as l}from"./index-Dv-qqpVD.js";import"./flowGraphCachedOperationBlock-D0WN6YwY.js";import"./KHR_interactivity-Be6aGxFA.js";import"./index-BxT30XTY.js";import"./svelte/svelte.js";import"./objectModelMapping-cMTfVHwv.js";class F extends a{constructor(r){super(p,n,o=>+o,"FlowGraphBooleanToFloat",r)}}l("FlowGraphBooleanToFloat",F);class u extends a{constructor(r){super(p,s,o=>e.FromValue(+o),"FlowGraphBooleanToInt",r)}}l("FlowGraphBooleanToInt",u);class c extends a{constructor(r){super(n,p,o=>!!o,"FlowGraphFloatToBoolean",r)}}l("FlowGraphFloatToBoolean",c);class h extends a{constructor(r){super(s,p,o=>!!o.value,"FlowGraphIntToBoolean",r)}}l("FlowGraphIntToBoolean",h);class w extends a{constructor(r){super(s,n,o=>o.value,"FlowGraphIntToFloat",r)}}l("FlowGraphIntToFloat",w);class G extends a{constructor(r){super(n,s,o=>{switch(r?.roundingMode){case"floor":return e.FromValue(Math.floor(o));case"ceil":return e.FromValue(Math.ceil(o));case"round":return e.FromValue(Math.round(o));default:return e.FromValue(o)}},"FlowGraphFloatToInt",r)}}l("FlowGraphFloatToInt",G);export{F as FlowGraphBooleanToFloat,u as FlowGraphBooleanToInt,c as FlowGraphFloatToBoolean,G as FlowGraphFloatToInt,h as FlowGraphIntToBoolean,w as FlowGraphIntToFloat};
//# sourceMappingURL=flowGraphTypeToTypeBlocks-BxFfK1Ea.js.map
