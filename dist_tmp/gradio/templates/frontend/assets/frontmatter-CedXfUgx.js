import{p as m,s,f as i,c as p,S as l,t as a}from"./Index-C68EcSM8.js";import{yaml as f}from"./yaml-DsCXHVTH.js";import"./index-BxT30XTY.js";import"./svelte/svelte.js";import"./init-LSZBPaOQ.js";import"./FullscreenButton-D9ae6NjA.js";import"./MarkdownCode-C3cHXZIw.js";import"./prism-python-DJ2F30C1.js";import"./StreamingBar-DOQD2ALs.js";import"./Example-Do2HGpgf.js";const n=/^---\s*$/m,b={defineNodes:[{name:"Frontmatter",block:!0},"FrontmatterMark"],props:[s({Frontmatter:[a.documentMeta,a.monospace],FrontmatterMark:a.processingInstruction}),i.add({Frontmatter:p,FrontmatterMark:()=>null})],wrap:m(t=>{const{parser:e}=l.define(f);return t.type.name==="Frontmatter"?{parser:e,overlay:[{from:t.from+4,to:t.to-4}]}:null}),parseBlock:[{name:"Frontmatter",before:"HorizontalRule",parse:(t,e)=>{let r;const o=new Array;if(t.lineStart===0&&n.test(e.text)){for(o.push(t.elt("FrontmatterMark",0,4));t.nextLine();)if(n.test(e.text)){r=t.lineStart+4;break}return r!==void 0&&(o.push(t.elt("FrontmatterMark",r-4,r)),t.addElement(t.elt("Frontmatter",0,r,o))),!0}return!1}}]};export{b as frontmatter};
//# sourceMappingURL=frontmatter-CedXfUgx.js.map
